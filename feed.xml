<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://readstech.github.io/bicbioeng-lab-blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://readstech.github.io/bicbioeng-lab-blog/" rel="alternate" type="text/html" /><updated>2022-04-10T01:06:03-05:00</updated><id>https://readstech.github.io/bicbioeng-lab-blog/feed.xml</id><title type="html">fastpages</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Topic Modeling</title><link href="https://readstech.github.io/bicbioeng-lab-blog/2022/04/10/topic-modeling.ipynb" rel="alternate" type="text/html" title="Topic Modeling" /><published>2022-04-10T00:00:00-05:00</published><updated>2022-04-10T00:00:00-05:00</updated><id>https://readstech.github.io/bicbioeng-lab-blog/2022/04/10/topic-modeling</id><author><name></name></author><summary type="html"><![CDATA[{ "cells": [ { "cell_type": "markdown", "source": [ "# Notebook Blog Post\n", "> A tutorial of Topic Modeling for Natural Language Processing.\n", "\n", "- toc: true \n", "- badges: true\n", "- comments: true\n", "- categories: [jupyter]\n", "- image: images/chart-preview.png" ], "metadata": { "id": "iuC4kicEeyU6" } }, { "cell_type": "markdown", "source": [ "# About\n", "\n", "This notebook is a demonstration of Topic Modeling of Natural Language Processing. \n", "\n", "\n", "`Natural language processing` is the analysis of languages used in the system that exists in the nltk library, where this is analyzed to cut, extract, and transform to new data so that we may gain useful insights. It only employs the languages that are included in the library because NLP-related items are present there, and it can't understand anything else.\n", "\n", "\n", "The recognition of words from the themes included in a document or a corpus of data is known as `topic modeling`. This is useful since retrieving words from a document takes significantly longer and is far more complicated than extracting them from the document's themes. We're forced to look into unsupervised techniques, such as Topic Modeling, to extract these subjects because I don't have any categories or labels.\n", "\n", "\n", "Although topic models like LDA and NMF have proven to be useful beginning points, We've always found that creating significant subjects required a lot of hyperparameter adjustment.\n", "\n", "\n", "Furthermore, I wanted to leverage transformer-based models like `BERT`, which have shown remarkable success in a variety of NLP applications in recent years. Pre-trained models are especially useful because they are believed to have more accurate word and phrase representations.\n", "\n", "\n", "I recently came across a fantastic project called [Top2Vec](https://github.com/ddangelov/Top2Vec), which used document and word embeddings to produce clearly understandable subjects. I started looking at the code to see if there was a way to make Top2Vec work with pre-trained transformer models.\n", "\n", "\n", "`Doc2Vec` has a significant advantage in that the resulting document- and word embeddings are concurrently embedded in the same space, allowing document embeddings to be represented by neighboring word embeddings. Unfortunately, because BERT embeddings are token-based and do not always occupy the same space, this proved challenging. \n", "\n", "\n", "Although they might share the same space, due to the contextual nature of BERT, the resulting size of the word embeddings is relatively big. Furthermore, the quality of the generated sentence- or document embeddings may deteriorate.\n", "\n", "\n", "Instead, I devised an approach that could make use of `BERT` and `transformer embeddings`. The outcome is BERTopic, a topic generation algorithm based on state-of-the-art embeddings.\n", "\n", "\n", "The main focus of this post will be a tutorial on how to use BERT to develop your own topic model rather than the use of BERTopic." ], "metadata": { "id": "_XJmA4HIe7Wv" } }, { "cell_type": "markdown", "source": [ "## Data & Packages" ], "metadata": { "id": "-ZqTiRG8fFa-" } }, { "cell_type": "markdown", "source": [ "For this, we use the readstech dataset which contains 1000 data." ], "metadata": { "id": "LwgxrUVsfKX8" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 74, "resources": { "http://localhost:8080/nbextensions/google.colab/files.js": { "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK", "headers": [ [ "content-type", "application/javascript" ] ], "ok": true, "status": 200, "status_text": "" } } }, "id": "cUQuMwJwIx3i", "outputId": "167abe34-cd4f-4e45-ddff-150b74a244f3" }, "outputs": [ { "output_type": "display_data", "data": { "text/plain": [ "" ], "text/html": [ "\n", " \n", " \n", " Upload widget is only available when the cell has been executed in the\n", " current browser session. Please rerun this cell to enable.\n", " \n", " " ] }, "metadata": {} }, { "output_type": "stream", "name": "stdout", "text": [ "Saving _search_1000.json to _search_1000.json\n" ] } ], "source": [ "#hide\n", "from google.colab import files\n", "uploaded = files.upload()" ] }, { "cell_type": "markdown", "source": [ "The Pandas DataFrame is a structure that holds two-dimensional data as well as the labels that go with it. DataFrames are frequently utilized in domains such as data science, machine learning, scientific computing, and many others that deal with large amounts of data. For the purpose of pre-processing the data pandas dataframe will be used." ], "metadata": { "id": "RoCbyxdNfPtS" } }, { "cell_type": "code", "execution_count": null, "metadata": { "id": "oo8TCMd0xcf_" }, "outputs": [], "source": [ "#collapse-hide\n", "import pandas as pd" ] }, { "cell_type": "markdown", "source": [ "\n", "`NLTK` is a Python toolbox for working with natural language processing. It supplies us with a variety of text processing libraries as well as a large number of test datasets. Tokenizing, parse tree visualization, and other operations can be accomplished with NLTK." ], "metadata": { "id": "ap5ZMCe_fYqI" } }, { "cell_type": "code", "source": [ "#collapse-hide\n", "import nltk\n", "\n", "# Downloaing resource\n", "nltk.download('wordnet')\n", "nltk.download('stopwords')\n", "nltk.download('punkt')" ], "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "izkdlpBpdXKg", "outputId": "7ffa612d-3f17-4755-8b17-087edfcf9fd5" }, "execution_count": null, "outputs": [ { "output_type": "stream", "name": "stdout", "text": [ "[nltk_data] Downloading package wordnet to /root/nltk_data...\n", "[nltk_data] Unzipping corpora/wordnet.zip.\n", "[nltk_data] Downloading package stopwords to /root/nltk_data...\n", "[nltk_data] Unzipping corpora/stopwords.zip.\n", "[nltk_data] Downloading package punkt to /root/nltk_data...\n", "[nltk_data] Unzipping tokenizers/punkt.zip.\n" ] }, { "output_type": "execute_result", "data": { "text/plain": [ "True" ] }, "metadata": {}, "execution_count": 3 } ] }, { "cell_type": "markdown", "source": [ "Convert a JSON string to pandas object." ], "metadata": { "id": "ftrDRow1frrJ" } }, { "cell_type": "code", "execution_count": null, "metadata": { "id": "krHPvnHdtxPD" }, "outputs": [], "source": [ "#collapse-hide\n", "df = pd.read_json('_search_1000.json', orient='str')" ] }, { "cell_type": "markdown", "source": [ "Normalize semi-structured JSON data into a flat table." ], "metadata": { "id": "Zcbt8G__fxdM" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 629 }, "id": "-vqaPFboJKxB", "outputId": "a353537e-c3b6-42fc-b444-017ec0e0603f" }, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ " _index _type _id _score _ignored \\\n", "0 reads_rex_ncbi_pubmed _doc 15574944 1.0 [description.keyword] \n", "1 reads_rex_ncbi_pubmed _doc 15574945 1.0 [description.keyword] \n", "2 reads_rex_ncbi_pubmed _doc 15574964 1.0 [description.keyword] \n", "3 reads_rex_ncbi_pubmed _doc 15575282 1.0 [description.keyword] \n", "4 reads_rex_ncbi_pubmed _doc 15575706 1.0 [description.keyword] \n", "\n", " _source.name _source.id \\\n", "0 Hypothesis for the role of nutrient starvation... 15574944 \n", "1 Shear rate moderates community diversity in fr... 15574945 \n", "2 Diversity of nontuberculoid Mycobacterium spec... 15574964 \n", "3 Three-dimensional dual-morphotype species mode... 15575282 \n", "4 Growth model and metabolic activity of brewing... 15575706 \n", "\n", " _source.URL \\\n", "0 [https://pubmed.ncbi.nlm.nih.gov/15574944] \n", "1 [https://pubmed.ncbi.nlm.nih.gov/15574945] \n", "2 [https://pubmed.ncbi.nlm.nih.gov/15574964] \n", "3 [https://pubmed.ncbi.nlm.nih.gov/15575282] \n", "4 [https://pubmed.ncbi.nlm.nih.gov/15575706] \n", "\n", " _source.sourceURL _source.version ... \\\n", "0 [https://pubmed.ncbi.nlm.nih.gov/15574944] 0.1 ... \n", "1 [https://pubmed.ncbi.nlm.nih.gov/15574945] 0.1 ... \n", "2 [https://pubmed.ncbi.nlm.nih.gov/15574964] 0.1 ... \n", "3 [https://pubmed.ncbi.nlm.nih.gov/15575282] 0.1 ... \n", "4 [https://pubmed.ncbi.nlm.nih.gov/15575706] 0.1 ... \n", "\n", " _source.bulk.doi _source.bulk.pii _source.bulk.pmc \\\n", "0 10.1128/AEM.70.12.7418-7425.2004 70/12/7418 PMC535154 \n", "1 10.1128/AEM.70.12.7426-7435.2004 70/12/7426 PMC535146 \n", "2 10.1128/AEM.70.12.7571-7573.2004 70/12/7571 PMC535200 \n", "3 10.1021/es049659l NaN NaN \n", "4 10.1021/bp049766j NaN NaN \n", "\n", " _source.bulk.language _source.bulk.reference \\\n", "0 eng [Biotechnol Bioeng. 1991 Aug 20;38(5):499-506,... \n", "1 eng [Annu Rev Microbiol. 2002;56:187-209, Can J Mi... \n", "2 eng [Int J Syst Evol Microbiol. 2000 Mar;50 Pt 2:5... \n", "3 eng NaN \n", "4 eng NaN \n", "\n", " _source.bulk.country _source.authors \\\n", "0 United States [Hunt, Stephen M, Werner, Erin M, Huang, Baoch... \n", "1 United States [Rickard, Alexander H, McBain, Andrew J, Stead... \n", "2 United States [September, S M, Brözel, V S, Venter, S N] \n", "3 United States [Martins, António M P, Picioreanu, Cristian, H... \n", "4 United States [Brányik, Tomás, Vicente, António A, Kuncová, ... \n", "\n", " _source.description \\\n", "0 A combination of experimental and theoretical ... \n", "1 The development of freshwater multispecies bio... \n", "2 Nontuberculous mycobacteria (NTM) are ubiquito... \n", "3 An individual-based model, originally develope... \n", "4 In the continuous systems, such as continuous ... \n", "\n", " _source.tags _source.bulk.day \n", "0 [Bacterial Adhesion, Biofilms, Bioreactors, Co... NaN \n", "1 [Bacteria, Bacterial Adhesion, Biofilms, Cultu... NaN \n", "2 [Biofilms, Colony Count, Microbial, DNA, Ribos... NaN \n", "3 [Bacteria, Aerobic, Biofilms, Biomass, Diffusi... 01 \n", "4 [Bacterial Adhesion, Beer, Biofilms, Bioreacto... NaN \n", "\n", "[5 rows x 25 columns]" ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " _index\n", " _type\n", " _id\n", " _score\n", " _ignored\n", " _source.name\n", " _source.id\n", " _source.URL\n", " _source.sourceURL\n", " _source.version\n", " ...\n", " _source.bulk.doi\n", " _source.bulk.pii\n", " _source.bulk.pmc\n", " _source.bulk.language\n", " _source.bulk.reference\n", " _source.bulk.country\n", " _source.authors\n", " _source.description\n", " _source.tags\n", " _source.bulk.day\n", " \n", " \n", " \n", " \n", " 0\n", " reads_rex_ncbi_pubmed\n", " _doc\n", " 15574944\n", " 1.0\n", " [description.keyword]\n", " Hypothesis for the role of nutrient starvation...\n", " 15574944\n", " [https://pubmed.ncbi.nlm.nih.gov/15574944]\n", " [https://pubmed.ncbi.nlm.nih.gov/15574944]\n", " 0.1\n", " ...\n", " 10.1128/AEM.70.12.7418-7425.2004\n", " 70/12/7418\n", " PMC535154\n", " eng\n", " [Biotechnol Bioeng. 1991 Aug 20;38(5):499-506,...\n", " United States\n", " [Hunt, Stephen M, Werner, Erin M, Huang, Baoch...\n", " A combination of experimental and theoretical ...\n", " [Bacterial Adhesion, Biofilms, Bioreactors, Co...\n", " NaN\n", " \n", " \n", " 1\n", " reads_rex_ncbi_pubmed\n", " _doc\n", " 15574945\n", " 1.0\n", " [description.keyword]\n", " Shear rate moderates community diversity in fr...\n", " 15574945\n", " [https://pubmed.ncbi.nlm.nih.gov/15574945]\n", " [https://pubmed.ncbi.nlm.nih.gov/15574945]\n", " 0.1\n", " ...\n", " 10.1128/AEM.70.12.7426-7435.2004\n", " 70/12/7426\n", " PMC535146\n", " eng\n", " [Annu Rev Microbiol. 2002;56:187-209, Can J Mi...\n", " United States\n", " [Rickard, Alexander H, McBain, Andrew J, Stead...\n", " The development of freshwater multispecies bio...\n", " [Bacteria, Bacterial Adhesion, Biofilms, Cultu...\n", " NaN\n", " \n", " \n", " 2\n", " reads_rex_ncbi_pubmed\n", " _doc\n", " 15574964\n", " 1.0\n", " [description.keyword]\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " 15574964\n", " [https://pubmed.ncbi.nlm.nih.gov/15574964]\n", " [https://pubmed.ncbi.nlm.nih.gov/15574964]\n", " 0.1\n", " ...\n", " 10.1128/AEM.70.12.7571-7573.2004\n", " 70/12/7571\n", " PMC535200\n", " eng\n", " [Int J Syst Evol Microbiol. 2000 Mar;50 Pt 2:5...\n", " United States\n", " [September, S M, Brözel, V S, Venter, S N]\n", " Nontuberculous mycobacteria (NTM) are ubiquito...\n", " [Biofilms, Colony Count, Microbial, DNA, Ribos...\n", " NaN\n", " \n", " \n", " 3\n", " reads_rex_ncbi_pubmed\n", " _doc\n", " 15575282\n", " 1.0\n", " [description.keyword]\n", " Three-dimensional dual-morphotype species mode...\n", " 15575282\n", " [https://pubmed.ncbi.nlm.nih.gov/15575282]\n", " [https://pubmed.ncbi.nlm.nih.gov/15575282]\n", " 0.1\n", " ...\n", " 10.1021/es049659l\n", " NaN\n", " NaN\n", " eng\n", " NaN\n", " United States\n", " [Martins, António M P, Picioreanu, Cristian, H...\n", " An individual-based model, originally develope...\n", " [Bacteria, Aerobic, Biofilms, Biomass, Diffusi...\n", " 01\n", " \n", " \n", " 4\n", " reads_rex_ncbi_pubmed\n", " _doc\n", " 15575706\n", " 1.0\n", " [description.keyword]\n", " Growth model and metabolic activity of brewing...\n", " 15575706\n", " [https://pubmed.ncbi.nlm.nih.gov/15575706]\n", " [https://pubmed.ncbi.nlm.nih.gov/15575706]\n", " 0.1\n", " ...\n", " 10.1021/bp049766j\n", " NaN\n", " NaN\n", " eng\n", " NaN\n", " United States\n", " [Brányik, Tomás, Vicente, António A, Kuncová, ...\n", " In the continuous systems, such as continuous ...\n", " [Bacterial Adhesion, Beer, Biofilms, Bioreacto...\n", " NaN\n", " \n", " \n", "\n", "5 rows × 25 columns\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 5 } ], "source": [ "# display table with pandas\n", "works_data = pd.json_normalize(data=df.hits.hits)\n", "works_data.head(5)" ] }, { "cell_type": "markdown", "source": [ "Filtering the data table. Concatenating two columns in one column." ], "metadata": { "id": "_KE7PkmZf43a" } }, { "cell_type": "code", "execution_count": null, "metadata": { "id": "zKsqb0qgJMTs", "colab": { "base_uri": "https://localhost:8080/", "height": 423 }, "outputId": "61f48538-de62-412f-8d5f-80b3722370f7" }, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ " _source.name \\\n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderates community diversity in fr... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype species mode... \n", "4 Growth model and metabolic activity of brewing... \n", ".. ... \n", "995 Development of real-time in vivo imaging of de... \n", "996 Control of bacterial biofilms with marine alka... \n", "997 A new vision for wound healing. \n", "998 A study of biofilm-based wound management in s... \n", "999 Response of microbial growth to orthophosphate... \n", "\n", " _source.description \\\n", "0 A combination of experimental and theoretical ... \n", "1 The development of freshwater multispecies bio... \n", "2 Nontuberculous mycobacteria (NTM) are ubiquito... \n", "3 An individual-based model, originally develope... \n", "4 In the continuous systems, such as continuous ... \n", ".. ... \n", "995 Staphylococcus epidermidis is the leading caus... \n", "996 Bacterial biofilms are defined as a community ... \n", "997 \n", "998 Bacterial biofilms cause or complicate numerou... \n", "999 Consequences of orthophosphate addition for co... \n", "\n", " concatenate \n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderates community diversity in fr... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype species mode... \n", "4 Growth model and metabolic activity of brewing... \n", ".. ... \n", "995 Development of real-time in vivo imaging of de... \n", "996 Control of bacterial biofilms with marine alka... \n", "997 A new vision for wound healing. \n", "998 A study of biofilm-based wound management in s... \n", "999 Response of microbial growth to orthophosphate... \n", "\n", "[1000 rows x 3 columns]" ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " _source.name\n", " _source.description\n", " concatenate\n", " \n", " \n", " \n", " \n", " 0\n", " Hypothesis for the role of nutrient starvation...\n", " A combination of experimental and theoretical ...\n", " Hypothesis for the role of nutrient starvation...\n", " \n", " \n", " 1\n", " Shear rate moderates community diversity in fr...\n", " The development of freshwater multispecies bio...\n", " Shear rate moderates community diversity in fr...\n", " \n", " \n", " 2\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " Nontuberculous mycobacteria (NTM) are ubiquito...\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " \n", " \n", " 3\n", " Three-dimensional dual-morphotype species mode...\n", " An individual-based model, originally develope...\n", " Three-dimensional dual-morphotype species mode...\n", " \n", " \n", " 4\n", " Growth model and metabolic activity of brewing...\n", " In the continuous systems, such as continuous ...\n", " Growth model and metabolic activity of brewing...\n", " \n", " \n", " ...\n", " ...\n", " ...\n", " ...\n", " \n", " \n", " 995\n", " Development of real-time in vivo imaging of de...\n", " Staphylococcus epidermidis is the leading caus...\n", " Development of real-time in vivo imaging of de...\n", " \n", " \n", " 996\n", " Control of bacterial biofilms with marine alka...\n", " Bacterial biofilms are defined as a community ...\n", " Control of bacterial biofilms with marine alka...\n", " \n", " \n", " 997\n", " A new vision for wound healing.\n", " \n", " A new vision for wound healing.\n", " \n", " \n", " 998\n", " A study of biofilm-based wound management in s...\n", " Bacterial biofilms cause or complicate numerou...\n", " A study of biofilm-based wound management in s...\n", " \n", " \n", " 999\n", " Response of microbial growth to orthophosphate...\n", " Consequences of orthophosphate addition for co...\n", " Response of microbial growth to orthophosphate...\n", " \n", " \n", "\n", "1000 rows × 3 columns\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 6 } ], "source": [ "# display table with pandas\n", "df_new = works_data.filter(['_source.name','_source.description'], axis=1)\n", "df_new[\"concatenate\"] = df_new[\"_source.name\"] + df_new[\"_source.description\"]\n", "df_new" ] }, { "cell_type": "markdown", "source": [ "We are further filtering the data by dropping the columns which is not necessary." ], "metadata": { "id": "qxbuFCoU06NF" } }, { "cell_type": "code", "source": [ "# display table with pandas\n", "desc_df = df_new.copy()\n", "ds = desc_df.drop(columns=['_source.name', '_source.description'])\n", "ds" ], "metadata": { "id": "8WCkFD5pTyFk", "colab": { "base_uri": "https://localhost:8080/", "height": 423 }, "outputId": "6452b5a6-383c-41f1-d082-e711b7d71ecf" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ " concatenate\n", "0 Hypothesis for the role of nutrient starvation...\n", "1 Shear rate moderates community diversity in fr...\n", "2 Diversity of nontuberculoid Mycobacterium spec...\n", "3 Three-dimensional dual-morphotype species mode...\n", "4 Growth model and metabolic activity of brewing...\n", ".. ...\n", "995 Development of real-time in vivo imaging of de...\n", "996 Control of bacterial biofilms with marine alka...\n", "997 A new vision for wound healing.\n", "998 A study of biofilm-based wound management in s...\n", "999 Response of microbial growth to orthophosphate...\n", "\n", "[1000 rows x 1 columns]" ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " concatenate\n", " \n", " \n", " \n", " \n", " 0\n", " Hypothesis for the role of nutrient starvation...\n", " \n", " \n", " 1\n", " Shear rate moderates community diversity in fr...\n", " \n", " \n", " 2\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " \n", " \n", " 3\n", " Three-dimensional dual-morphotype species mode...\n", " \n", " \n", " 4\n", " Growth model and metabolic activity of brewing...\n", " \n", " \n", " ...\n", " ...\n", " \n", " \n", " 995\n", " Development of real-time in vivo imaging of de...\n", " \n", " \n", " 996\n", " Control of bacterial biofilms with marine alka...\n", " \n", " \n", " 997\n", " A new vision for wound healing.\n", " \n", " \n", " 998\n", " A study of biofilm-based wound management in s...\n", " \n", " \n", " 999\n", " Response of microbial growth to orthophosphate...\n", " \n", " \n", "\n", "1000 rows × 1 columns\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 7 } ] }, { "cell_type": "markdown", "source": [ "The grouping of distinct variants of the same word is known as lemmatization. `Lemmatization` in search queries allows users to query any variant of a base term and receive relevant responses. Here we have lemmatized our data." ], "metadata": { "id": "1acBFOjKgWDt" } }, { "cell_type": "code", "source": [ "# display table with pandas\n", "w_tokenizer = nltk.tokenize.WhitespaceTokenizer()\n", "lemmatizer = nltk.stem.WordNetLemmatizer()\n", "\n", "def lemmatize_text(text):\n", " return [lemmatizer.lemmatize(w) for w in w_tokenizer.tokenize(text)]\n", "\n", "ds['text_lemmatized'] = ds.concatenate.apply(lemmatize_text)\n", "ds[\"lemmatized\"] = ds['text_lemmatized'].agg(lambda x: ' '.join(map(str, x)))\n", "ds.head(5)" ], "metadata": { "id": "k1LH77oNY1G5", "colab": { "base_uri": "https://localhost:8080/", "height": 206 }, "outputId": "bba49356-a597-4079-fe18-1737967272fe" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ " concatenate \\\n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderates community diversity in fr... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype species mode... \n", "4 Growth model and metabolic activity of brewing... \n", "\n", " text_lemmatized \\\n", "0 [Hypothesis, for, the, role, of, nutrient, sta... \n", "1 [Shear, rate, moderate, community, diversity, ... \n", "2 [Diversity, of, nontuberculoid, Mycobacterium,... \n", "3 [Three-dimensional, dual-morphotype, specie, m... \n", "4 [Growth, model, and, metabolic, activity, of, ... \n", "\n", " lemmatized \n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderate community diversity in fre... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype specie model... \n", "4 Growth model and metabolic activity of brewing... " ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " concatenate\n", " text_lemmatized\n", " lemmatized\n", " \n", " \n", " \n", " \n", " 0\n", " Hypothesis for the role of nutrient starvation...\n", " [Hypothesis, for, the, role, of, nutrient, sta...\n", " Hypothesis for the role of nutrient starvation...\n", " \n", " \n", " 1\n", " Shear rate moderates community diversity in fr...\n", " [Shear, rate, moderate, community, diversity, ...\n", " Shear rate moderate community diversity in fre...\n", " \n", " \n", " 2\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " [Diversity, of, nontuberculoid, Mycobacterium,...\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " \n", " \n", " 3\n", " Three-dimensional dual-morphotype species mode...\n", " [Three-dimensional, dual-morphotype, specie, m...\n", " Three-dimensional dual-morphotype specie model...\n", " \n", " \n", " 4\n", " Growth model and metabolic activity of brewing...\n", " [Growth, model, and, metabolic, activity, of, ...\n", " Growth model and metabolic activity of brewing...\n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 8 } ] }, { "cell_type": "markdown", "source": [ "In any natural language, stopwords are the most prevalent words. These stopwords might not contribute much value to the meaning of the document for the purposes of evaluating text data and constructing NLP models. We have removed stopwords from our dataset." ], "metadata": { "id": "MsawnH1dghfo" } }, { "cell_type": "code", "source": [ "#hide_input\n", "# display table with pandas\n", "from nltk.corpus import stopwords\n", "stop = stopwords.words('english')\n", "\n", "ds['stop_words'] = ds['lemmatized'].apply(lambda x: ' '.join([word for word in x.split() if word not in (stop)]))\n", "ds.head(5)" ], "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 206 }, "id": "ye5rJs5j8X0L", "outputId": "474f01c1-9005-44d6-9dff-3eeebcf91fe4" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ " concatenate \\\n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderates community diversity in fr... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype species mode... \n", "4 Growth model and metabolic activity of brewing... \n", "\n", " text_lemmatized \\\n", "0 [Hypothesis, for, the, role, of, nutrient, sta... \n", "1 [Shear, rate, moderate, community, diversity, ... \n", "2 [Diversity, of, nontuberculoid, Mycobacterium,... \n", "3 [Three-dimensional, dual-morphotype, specie, m... \n", "4 [Growth, model, and, metabolic, activity, of, ... \n", "\n", " lemmatized \\\n", "0 Hypothesis for the role of nutrient starvation... \n", "1 Shear rate moderate community diversity in fre... \n", "2 Diversity of nontuberculoid Mycobacterium spec... \n", "3 Three-dimensional dual-morphotype specie model... \n", "4 Growth model and metabolic activity of brewing... \n", "\n", " stop_words \n", "0 Hypothesis role nutrient starvation biofilm de... \n", "1 Shear rate moderate community diversity freshw... \n", "2 Diversity nontuberculoid Mycobacterium specie ... \n", "3 Three-dimensional dual-morphotype specie model... \n", "4 Growth model metabolic activity brewing yeast ... " ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " concatenate\n", " text_lemmatized\n", " lemmatized\n", " stop_words\n", " \n", " \n", " \n", " \n", " 0\n", " Hypothesis for the role of nutrient starvation...\n", " [Hypothesis, for, the, role, of, nutrient, sta...\n", " Hypothesis for the role of nutrient starvation...\n", " Hypothesis role nutrient starvation biofilm de...\n", " \n", " \n", " 1\n", " Shear rate moderates community diversity in fr...\n", " [Shear, rate, moderate, community, diversity, ...\n", " Shear rate moderate community diversity in fre...\n", " Shear rate moderate community diversity freshw...\n", " \n", " \n", " 2\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " [Diversity, of, nontuberculoid, Mycobacterium,...\n", " Diversity of nontuberculoid Mycobacterium spec...\n", " Diversity nontuberculoid Mycobacterium specie ...\n", " \n", " \n", " 3\n", " Three-dimensional dual-morphotype species mode...\n", " [Three-dimensional, dual-morphotype, specie, m...\n", " Three-dimensional dual-morphotype specie model...\n", " Three-dimensional dual-morphotype specie model...\n", " \n", " \n", " 4\n", " Growth model and metabolic activity of brewing...\n", " [Growth, model, and, metabolic, activity, of, ...\n", " Growth model and metabolic activity of brewing...\n", " Growth model metabolic activity brewing yeast ...\n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 9 } ] }, { "cell_type": "markdown", "source": [ "Returning a list of values for further demonstration." ], "metadata": { "id": "KzdWI-YS1a82" } }, { "cell_type": "code", "source": [ "#collapse-hide\n", "desc = ds['stop_words'].to_list()\n", "desc[0]" ], "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 122 }, "id": "f0tgJ3bL86EB", "outputId": "aa851ca1-967a-4349-b86d-6673595d130d" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "'Hypothesis role nutrient starvation biofilm detachment.A combination experimental theoretical approach wa used investigate role nutrient starvation potential trigger biofilm detachment. Experimental observation detachment variety biofilm system made pure culture Pseudomonas aeruginosa. These observation indicated biofilms grown continuous-flow condition detached flow wa stopped, hollow cell cluster sometimes observed biofilms grown flow cells, lysed cell apparent internal stratum colony biofilms. When biofilms nutrient starved continuous-flow conditions, detachment still occurred, suggesting starvation accumulation metabolic product wa responsible triggering detachment particular system. A cellular automaton computer model biofilm dynamic wa used explore starvation-dependent detachment mechanism. The model predicted biofilm structure dynamic qualitatively similar observed experimentally. The predicted feature included centrally located void appearing sufficiently large cell clusters, gradient growth rate within clusters, release biofilm simulated stopped-flow conditions. The model wa also able predict biofilm sloughing resulting solely detachment mechanism. These result support conjecture nutrient starvation environmental cue release microbe biofilm.'" ], "application/vnd.google.colaboratory.intrinsic+json": { "type": "string" } }, "metadata": {}, "execution_count": 10 } ] }, { "cell_type": "markdown", "source": [ "## Embeddings" ], "metadata": { "id": "HO5oJMNmslVl" } }, { "cell_type": "markdown", "source": [ "Converting the documents to numerical data is the first step we must take. We utilize BERT for this since it extracts multiple embeddings depending on the word's context. Not only that, but there are a slew of pre-trained models ready to go.\n", "It's up to you how you generate BERT embeddings for a document. However, I prefer to utilize the sentence-transformers package because the resulting embeddings have consistently proven to be of excellent quality and function well for document-level embeddings.\n", "Before generating the document embeddings, install the package with `pip install sentence-transformers`." ], "metadata": { "id": "1WhfIT74lwyq" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 1000, "referenced_widgets": [ "4e9b41ee20d54d28b23bc6b0898655be", "0571ba51836e4442a395d31a42391f3b", "5a28647c8a924bb58d4528a1ad43c055", "e6241b011c184994929642e3ffea8b3c", "fc13af9c48124cdb81ccb331ea667e4f", "1bef75a77d084b339d835b4a135f267d", "8d9dba879761425a9bc705cccb9751fa", "b12cdb68782340a1abdd971f083b00d7", "f0a8d9b85f89482583cacfc18fcedc44", "07a6a9ddc9044682b9c5998bd87477dd", "5726a39089844b318f6970a010a5a537", "99a157f485a645aba1a02d3b50dc38e4", "c8d22dd4e65741aeb0feec9222ebf1cb", "4861de8af5a14e91b72412796139ef99", "d5d6796044454f9b84a29365dfab6774", "2312c586ea2f4543a113ee3ca438fb13", "0634b09326634dea8c474fc07187e8a9", "9f5d5355645a4e1a9ebe01f99e9f9f0e", "eac376a2d8e3487f87537118dbf57726", "7c0d714608fe479b800d1e46870af123", "a99ad2da42f34e058befdb353582ac94", "c1a51141fac54963ab8f3e482d349cfc", "9f13688e9a2b43fca31a05afd1930499", "dd5309c0140745aeb9c682662af2d355", "69324b5bebc749ff84dd905b95ec261d", "80a23109d92245739b54c9534d9f302c", "1a597653adea43a6990fed6309d49e2e", "2242e51d7f5c470eb19c98a707dac681", "20de34b2745a4ff0939412bc59fe8c3a", "b09dcc8c627447b1b125d61afa11ad95", "36b89e02877e4332a25e05da132c12b4", "be5d06c0446042d5879c2a891c183f01", "7a3b66f2130c43ebb5b7c12667300327", "a239d56ee3ac4d1593a063329350a1a2", "d11bce41480746c8b071baad09c0506e", "252a4237a63740dba9b1b08db9210007", "644e0163ad054fb5ac03654d8a2059df", "d5d5625562b048cf982581297001a14c", "ea640860383a45dc98c59076bc2d9452", "e09ed8b749844f0f96f745380e8c91f4", "a6fcbd0cf7d444d4ae090890770f70cf", "6ea25a30a1084200b746c6fe82d275e4", "23908ca6d9f44af0a834cf6a66105444", "f0a47a3349534df093bc7cae8ce3d1ca", "eb29d9d4862d42cda0126ce2e2ee1489", "261ad465189f4f489a99b9243623007f", "d87f15b51d724339a688ab353afda8d8", "30802e5be6854065a4add613b65c0f32", "477709a9eaa8403684a3c19caac7843c", "0dc97d5a597641149fb314ff55553a78", "1a320253bcd04789bd8b9cb410bb0524", "bef0cc76caac48c2a3d265864d5c46c6", "1b4eb842b5584aaeafb40a28def2d921", "0c94b1e9cda34410a81f523d63c91637", "cae50e598c8c40d38b09f9fbe8dddab3", "c4335ff76c4a47cfaa6a9700e4961c14", "0fa46978593e479994c75489544596cc", "edfab9679d3e44609549a277323e7dd4", "79573a90e2ec41f2aeed299cb521d223", "5d4ad283d5904b60a7cc82416397da14", "c775716acb4c4844a20cbf4fcdb89e0d", "b0ec4fa70fea430a84abd27dae8238a8", "2194bbd052464e4c9c7c1bce877273ea", "26e8f96a3bb2443688e34b674d52f489", "e3238a7cbc5346bd874e7e7608cd3775", "62879470484b465f87d0566e9e42ef6f", "8a0773f520cd41239ecf67ef29ab9b1b", "f1422789f90f49108d2cbfc2f61b8404", "07a7630ff2c547a1a921ec15b068baa9", "593759e42b1c4d48aeac440420074c56", "f3aae5300ed547b1808fe8d8fd579a80", "0d67c26cedea48b7a6371e8864dc6cff", "d91400902ef04ceb94844d7b9a262b9b", "554586e62ca34cf2bf1ac7ceaada9759", "b6fe7d06d7ec4aaf9fa04255ca00bf0f", "8bf82755d1f14a46b0f4a353c0e02fc3", "3916af2669634fa596ab260bfa1dc3ee", "9dc64ee499ef44ddb58dfef8eebb5b79", "c1a5c121ec484b8caab27486cdb0d3e6", "05ec10fb71be492b80295bdee7d47831", "4562ac11827e4e0ca2dab56b953d22de", "6b2235cf3f964d4399f0079587930061", "b5e2e95b3e5c4a039e04f6b4be258a82", "90afa46f3a594dafa4753fa3f0de32c2", "ac72a0f833444531afd8f61d15938f38", "85036764c5e644f8bc5d6486cf3de865", "66a17ea68ac84e32a5b031defee58629", "cdfac733d3cd40e992d40ae35efe83f7", "3c7df8dc40464c6f92008b15935f428e", "221d008c325647bdbf67f6616314b52f", "48906177283f43c09f2808f14d490285", "2182d42a0e3d45c3b12f3c528c922f4c", "df3480fd2a0642cb8193c18b2181df8b", "deaded7e5020481c99adcb0bdaa22dc5", "37694f7bb6f34008bdd52ce12cc3dcb1", "63e16379366f4e1195128c46303aa72e", "eb67b9adab63421f92eb4ce5d6c58bd9", "81514c67c46d44799226f51a217434dd", "dddc05e60cd34fc99f117c90ae8ac829", "75e010c9d6fc4c62aa7d12d007ed0a73", "a82b4febc5ec4a298123955d20e0d96e", "c755e11c699c4f5694b266d5aa6d387c", "c7e147d6921d45f8b552e735823ea394", "570b0e409c82453da6bdf4404bd2cbbd", "4577e4e42d0143eba641b99b3989ecff", "216d2736dad347709134507020628728", "1a77fe6ed3de47c8a16540b57416ffca", "bbd01a44548b454c8ac22fa29f5762c5", "18833456d00d42fdbeb21d0d4a7df089", "38ba306a162b4207bd2ffa341971cc4a", "08ed88e630294c3496fc7ef019b01b63", "f6f99f59ce044c16ad528e35b319de59", "6318e530c67f4a71913cfeb1608495ec", "3ed7848624304f0b92050afe49fa8975", "14c042ab615747cd870152c8e48ab484", "9c696a3adafb43399c213c89af17bfa7", "7464572611d741a4bc29e4169aaa76e9", "a0d867f19c964f1d87d09e60fefa28c9", "728da3df7af1495b8ac1e1a048fda156", "0a0cf24ff7544c59af69fba34ea741f5", "a9c3b54eeb744e20ae0062a1088d90a6", "a9068299daa5493580588a08b5170563", "0a1a4aec7ae44426b66f4d8046248b26", "0031e036be5d40ff8114aa6d5d09d864", "b604222e2c414251b660b266c2e1fd62", "56a8fbaee60143afa02459855ce6e1c5", "51b328c446b94cc692173d5135a68779", "3239090a906043b68c6df6c2a59f97bf", "acb6313b2fa1450ab2aefdc8208d2577", "c8a80c42256c4d559b865b47cdceb579", "6c65dd6999e44509bbd110bb65fa7cb1", "22d49365f814435088e6820c2297378a", "bfc0071cfca34669884aabf19a2e9361", "c200aeca87154cfeaac4861be6cdcf44", "fa7f471b64aa4d269fd2659eab802cb8", "343547d4d4304c2a9c8ccf78c91bbf14", "4395e222a703448b835601c72aa2c699", "642a255c02e84da1af51b86e40b16459", "7cf0883b7df740ebbcf83e0af773d5f6", "ecb267452dce406f80d15572cae36ab0", "2361ae2347dd432d98c91e57c03c20bf", "dfd3b927e6ee48f89f101de464d6fa2b", "33e7d532927248fb847247d53056b5f7" ] }, "id": "eL7ne7orJrUG", "outputId": "8d3d4f7c-b510-48c0-ed57-637a4b38ee2b" }, "outputs": [ { "output_type": "stream", "name": "stdout", "text": [ "Collecting sentence_transformers\n", " Downloading sentence-transformers-2.2.0.tar.gz (79 kB)\n", "\u001b[K |████████████████████████████████| 79 kB 4.0 MB/s \n", "\u001b[?25hCollecting transformers=4.6.0\n", " Downloading transformers-4.18.0-py3-none-any.whl (4.0 MB)\n", "\u001b[K |████████████████████████████████| 4.0 MB 30.1 MB/s \n", "\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (4.63.0)\n", "Requirement already satisfied: torch>=1.6.0 in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (1.10.0+cu111)\n", "Requirement already satisfied: torchvision in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (0.11.1+cu111)\n", "Requirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (1.21.5)\n", "Requirement already satisfied: scikit-learn in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (1.0.2)\n", "Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (1.4.1)\n", "Requirement already satisfied: nltk in /usr/local/lib/python3.7/dist-packages (from sentence_transformers) (3.2.5)\n", "Collecting sentencepiece\n", " Downloading sentencepiece-0.1.96-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.2 MB)\n", "\u001b[K |████████████████████████████████| 1.2 MB 42.0 MB/s \n", "\u001b[?25hCollecting huggingface-hub\n", " Downloading huggingface_hub-0.5.1-py3-none-any.whl (77 kB)\n", "\u001b[K |████████████████████████████████| 77 kB 6.4 MB/s \n", "\u001b[?25hRequirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from torch>=1.6.0->sentence_transformers) (3.10.0.2)\n", "Requirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers=4.6.0->sentence_transformers) (3.6.0)\n", "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers=4.6.0->sentence_transformers) (2.23.0)\n", "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from transformers=4.6.0->sentence_transformers) (21.3)\n", "Collecting tokenizers!=0.11.3,=0.11.1\n", " Downloading tokenizers-0.11.6-cp37-cp37m-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (6.5 MB)\n", "\u001b[K |████████████████████████████████| 6.5 MB 36.6 MB/s \n", "\u001b[?25hRequirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from transformers=4.6.0->sentence_transformers) (4.11.3)\n", "Collecting sacremoses\n", " Downloading sacremoses-0.0.49-py3-none-any.whl (895 kB)\n", "\u001b[K |████████████████████████████████| 895 kB 45.4 MB/s \n", "\u001b[?25hCollecting pyyaml>=5.1\n", " Downloading PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (596 kB)\n", "\u001b[K |████████████████████████████████| 596 kB 48.7 MB/s \n", "\u001b[?25hRequirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers=4.6.0->sentence_transformers) (2019.12.20)\n", "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=20.0->transformers=4.6.0->sentence_transformers) (3.0.7)\n", "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->transformers=4.6.0->sentence_transformers) (3.7.0)\n", "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from nltk->sentence_transformers) (1.15.0)\n", "Requirement already satisfied: chardet=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers=4.6.0->sentence_transformers) (3.0.4)\n", "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers=4.6.0->sentence_transformers) (1.24.3)\n", "Requirement already satisfied: idna=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers=4.6.0->sentence_transformers) (2.10)\n", "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers=4.6.0->sentence_transformers) (2021.10.8)\n", "Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers=4.6.0->sentence_transformers) (1.1.0)\n", "Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers=4.6.0->sentence_transformers) (7.1.2)\n", "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn->sentence_transformers) (3.1.0)\n", "Requirement already satisfied: pillow!=8.3.0,>=5.3.0 in /usr/local/lib/python3.7/dist-packages (from torchvision->sentence_transformers) (7.1.2)\n", "Building wheels for collected packages: sentence-transformers\n", " Building wheel for sentence-transformers (setup.py) ... \u001b[?25l\u001b[?25hdone\n", " Created wheel for sentence-transformers: filename=sentence_transformers-2.2.0-py3-none-any.whl size=120747 sha256=31d12e87d0c161b58eead56362d6e1c0123ed46a73bf7e5a5ef7dcb575582840\n", " Stored in directory: /root/.cache/pip/wheels/83/c0/df/b6873ab7aac3f2465aa9144b6b4c41c4391cfecc027c8b07e7\n", "Successfully built sentence-transformers\n", "Installing collected packages: pyyaml, tokenizers, sacremoses, huggingface-hub, transformers, sentencepiece, sentence-transformers\n", " Attempting uninstall: pyyaml\n", " Found existing installation: PyYAML 3.13\n", " Uninstalling PyYAML-3.13:\n", " Successfully uninstalled PyYAML-3.13\n", "Successfully installed huggingface-hub-0.5.1 pyyaml-6.0 sacremoses-0.0.49 sentence-transformers-2.2.0 sentencepiece-0.1.96 tokenizers-0.11.6 transformers-4.18.0\n" ] }, { "output_type": "display_data", "data": { "text/plain": [ "Downloading: 0%| | 0.00/690 [00:00=1.17 in /usr/local/lib/python3.7/dist-packages (from umap-learn) (1.21.5)\n", "Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.7/dist-packages (from umap-learn) (1.0.2)\n", "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/dist-packages (from umap-learn) (1.4.1)\n", "Requirement already satisfied: numba>=0.49 in /usr/local/lib/python3.7/dist-packages (from umap-learn) (0.51.2)\n", "Collecting pynndescent>=0.5\n", " Downloading pynndescent-0.5.6.tar.gz (1.1 MB)\n", "\u001b[K |████████████████████████████████| 1.1 MB 34.5 MB/s \n", "\u001b[?25hRequirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from umap-learn) (4.63.0)\n", "Requirement already satisfied: setuptools in /usr/local/lib/python3.7/dist-packages (from numba>=0.49->umap-learn) (57.4.0)\n", "Requirement already satisfied: llvmlite=0.34.0.dev0 in /usr/local/lib/python3.7/dist-packages (from numba>=0.49->umap-learn) (0.34.0)\n", "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from pynndescent>=0.5->umap-learn) (1.1.0)\n", "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.22->umap-learn) (3.1.0)\n", "Building wheels for collected packages: umap-learn, pynndescent\n", " Building wheel for umap-learn (setup.py) ... \u001b[?25l\u001b[?25hdone\n", " Created wheel for umap-learn: filename=umap_learn-0.5.2-py3-none-any.whl size=82708 sha256=4e1b8aeb498ece8b19a3afde43ab22f936b9a495ca9c28c1bdfeb36f66e7eb6d\n", " Stored in directory: /root/.cache/pip/wheels/84/1b/c6/aaf68a748122632967cef4dffef68224eb16798b6793257d82\n", " Building wheel for pynndescent (setup.py) ... \u001b[?25l\u001b[?25hdone\n", " Created wheel for pynndescent: filename=pynndescent-0.5.6-py3-none-any.whl size=53943 sha256=a4aee55121ba70a786fcb3001694d83e69fe5a242af57e8071fe3cfb204a451c\n", " Stored in directory: /root/.cache/pip/wheels/03/f1/56/f80d72741e400345b5a5b50ec3d929aca581bf45e0225d5c50\n", "Successfully built umap-learn pynndescent\n", "Installing collected packages: pynndescent, umap-learn\n", "Successfully installed pynndescent-0.5.6 umap-learn-0.5.2\n" ] }, { "output_type": "stream", "name": "stderr", "text": [ "/usr/local/lib/python3.7/dist-packages/numba/np/ufunc/parallel.py:363: NumbaWarning: The TBB threading layer requires TBB version 2019.5 or later i.e., TBB_INTERFACE_VERSION >= 11005. Found TBB_INTERFACE_VERSION = 9107. The TBB threading layer is disabled.\n", " warnings.warn(problem)\n" ] } ], "source": [ "#collapse-hide\n", "!pip install umap-learn\n", "\n", "import umap\n", "umap_embeddings = umap.UMAP(n_neighbors=3, \n", " n_components=2, \n", " metric='cosine').fit_transform(embeddings)" ] }, { "cell_type": "markdown", "source": [ "### HDBSCAN" ], "metadata": { "id": "RGPPJ3_zs08Y" } }, { "cell_type": "markdown", "source": [ "After reducing the dimensionality of the document embeddings to 2, we may use HDBSCAN to cluster the documents. Because UMAP maintains a lot of local structure even in lower-dimensional space, `HDBSCAN` is a density-based method that works well with UMAP. Furthermore, because outliers are considered outliers, `HDBSCAN` does not coerce data points into clusters." ], "metadata": { "id": "XV58VS_wm6mV" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "CBQPn7oNKEP8", "outputId": "8f70ae64-5e62-4414-b76b-641433db7bb7" }, "outputs": [ { "output_type": "stream", "name": "stdout", "text": [ "Collecting hdbscan\n", " Downloading hdbscan-0.8.28.tar.gz (5.2 MB)\n", "\u001b[K |████████████████████████████████| 5.2 MB 5.3 MB/s \n", "\u001b[?25h Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n", " Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n", " Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n", "Requirement already satisfied: joblib>=1.0 in /usr/local/lib/python3.7/dist-packages (from hdbscan) (1.1.0)\n", "Requirement already satisfied: scipy>=1.0 in /usr/local/lib/python3.7/dist-packages (from hdbscan) (1.4.1)\n", "Requirement already satisfied: cython>=0.27 in /usr/local/lib/python3.7/dist-packages (from hdbscan) (0.29.28)\n", "Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.7/dist-packages (from hdbscan) (1.21.5)\n", "Requirement already satisfied: scikit-learn>=0.20 in /usr/local/lib/python3.7/dist-packages (from hdbscan) (1.0.2)\n", "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.20->hdbscan) (3.1.0)\n", "Building wheels for collected packages: hdbscan\n", " Building wheel for hdbscan (PEP 517) ... \u001b[?25l\u001b[?25hdone\n", " Created wheel for hdbscan: filename=hdbscan-0.8.28-cp37-cp37m-linux_x86_64.whl size=2330779 sha256=d8c76ea558cb81cc0b2f13c9148d6a571748ef5f67a580d2938269047a4c6e16\n", " Stored in directory: /root/.cache/pip/wheels/6e/7a/5e/259ccc841c085fc41b99ef4a71e896b62f5161f2bc8a14c97a\n", "Successfully built hdbscan\n", "Installing collected packages: hdbscan\n", "Successfully installed hdbscan-0.8.28\n" ] } ], "source": [ "#collapse-hide\n", "!pip install hdbscan\n", "\n", "import hdbscan\n", "cluster = hdbscan.HDBSCAN(min_cluster_size=3,\n", " metric='euclidean', \n", " cluster_selection_method='eom').fit(umap_embeddings)" ] }, { "cell_type": "markdown", "source": [ "We've now grouped similar documents into groups that should represent the themes they cover. We can further reduce the dimensionality to 2 and show the resulting clusters as grey dots to visualize the outliers." ], "metadata": { "id": "C1-tbCSWnetP" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 610 }, "id": "Qw4AWGTLK6Jn", "outputId": "56f02037-ce6f-4330-d72f-26a398ca2d0a" }, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "" ] }, "metadata": {}, "execution_count": 14 }, { "output_type": "display_data", "data": { "text/plain": [ "" ], "image/png": "\n" }, "metadata": { "needs_background": "light" } } ], "source": [ "#collapse-show \n", "import matplotlib.pyplot as plt\n", "\n", "# Prepare data\n", "umap_data = umap.UMAP(n_neighbors=3, n_components=2, min_dist=0.01, metric='cosine').fit_transform(embeddings)\n", "result = pd.DataFrame(umap_data, columns=['x', 'y'])\n", "result['labels'] = cluster.labels_\n", "\n", "# Visualize clusters\n", "fig, ax = plt.subplots(figsize=(20, 10))\n", "outliers = result.loc[result.labels == -1, :]\n", "clustered = result.loc[result.labels != -1, :]\n", "plt.scatter(outliers.x, outliers.y, color='#BDBDBD', s=0.05)\n", "plt.scatter(clustered.x, clustered.y, c=clustered.labels, s=1.9, cmap='hsv_r')\n", "plt.colorbar()" ] }, { "cell_type": "markdown", "source": [ "## Topic Creation" ], "metadata": { "id": "5ta5LjGHs_pF" } }, { "cell_type": "markdown", "source": [ "To address this, I devised a class-based form of `TF-IDF` (c-TF-IDF), which allows me to extract what distinguishes each set of documents from the others.\n", "The following is the method's intuition. When you use TF-IDF to compare the value of words in a set of papers, you are essentially comparing the relevance of words between documents.\n", "What if we treated all documents in a single category (for example, a cluster) as a single document and then applied TF-IDF on it? As a result, each category would have a very long document, and the TF-IDF score would show the most essential terms in the topic." ], "metadata": { "id": "MGpxaq5roEWX" } }, { "cell_type": "markdown", "source": [ "### c-TF-IDF" ], "metadata": { "id": "6rRHo1extJFa" } }, { "cell_type": "markdown", "source": [ "We must first construct a single document for each cluster of documents in order to create this class-based TF-IDF score." ], "metadata": { "id": "AsNDieilok50" } }, { "cell_type": "code", "execution_count": null, "metadata": { "id": "uhSrgNEQLE4N" }, "outputs": [], "source": [ "docs_df = pd.DataFrame(desc, columns=[\"stop_words\"])\n", "docs_df['Topic'] = cluster.labels_\n", "docs_df['Doc_ID'] = range(len(docs_df))\n", "docs_per_topic = docs_df.groupby(['Topic'], as_index = False).agg({'stop_words': ' '.join})" ] }, { "cell_type": "markdown", "source": [ "As a next step, we implement the TF-IDF." ], "metadata": { "id": "bAqBarUb14kB" } }, { "cell_type": "code", "execution_count": null, "metadata": { "id": "ucdT4sivLe2O" }, "outputs": [], "source": [ "import numpy as np\n", "from sklearn.feature_extraction.text import CountVectorizer\n", "\n", "def c_tf_idf(documents, m, ngram_range=(1, 1)):\n", " count = CountVectorizer(ngram_range=ngram_range, stop_words=\"english\").fit(documents)\n", " t = count.transform(documents).toarray()\n", " w = t.sum(axis=1)\n", " tf = np.divide(t.T, w)\n", " sum_t = t.sum(axis=0)\n", " idf = np.log(np.divide(m, sum_t)).reshape(-1, 1)\n", " tf_idf = np.multiply(tf, idf)\n", "\n", " return tf_idf, count\n", " \n", "tf_idf, count = c_tf_idf(docs_per_topic.stop_words.values, m=len(desc))" ] }, { "cell_type": "markdown", "source": [ "### Topic Representation" ], "metadata": { "id": "LpJ4j1TDtQOz" } }, { "cell_type": "markdown", "source": [ "We take the top 5 words each topic based on their `c-TF-IDF` scores to construct a topic representation. Because the score is a proxy for information density, the higher the score, the more representative it should be of its topic." ], "metadata": { "id": "JwTM24Unov7C" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 261 }, "id": "wuoUavT8YL11", "outputId": "fe45458b-983b-4fd9-dc7a-b9843e7fc979" }, "outputs": [ { "output_type": "stream", "name": "stderr", "text": [ "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n" ] }, { "output_type": "execute_result", "data": { "text/plain": [ " Topic Size\n", "0 -1 218\n", "28 27 19\n", "80 79 19\n", "102 101 18\n", "29 28 15" ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " Topic\n", " Size\n", " \n", " \n", " \n", " \n", " 0\n", " -1\n", " 218\n", " \n", " \n", " 28\n", " 27\n", " 19\n", " \n", " \n", " 80\n", " 79\n", " 19\n", " \n", " \n", " 102\n", " 101\n", " 18\n", " \n", " \n", " 29\n", " 28\n", " 15\n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 17 } ], "source": [ "def extract_top_n_words_per_topic(tf_idf, count, docs_per_topic, n=5):\n", " words = count.get_feature_names()\n", " labels = list(docs_per_topic.Topic)\n", " tf_idf_transposed = tf_idf.T\n", " indices = tf_idf_transposed.argsort()[:, -n:]\n", " top_n_words = {label: [(words[j], tf_idf_transposed[i][j]) for j in indices[i]][::-1] for i, label in enumerate(labels)}\n", " return top_n_words\n", "\n", "def extract_topic_sizes(df):\n", " topic_sizes = (df.groupby(['Topic'])\n", " .stop_words\n", " .count()\n", " .reset_index()\n", " .rename({\"Topic\": \"Topic\", \"stop_words\": \"Size\"}, axis='columns')\n", " .sort_values(\"Size\", ascending=False))\n", " return topic_sizes\n", "\n", "top_n_words = extract_top_n_words_per_topic(tf_idf, count, docs_per_topic, n=5)\n", "topic_sizes = extract_topic_sizes(docs_df); topic_sizes.head(5)" ] }, { "cell_type": "markdown", "source": [ "All documents with no designated themes are referred to as topic name-1. The beauty of `HDBSCAN` is that it does not force all papers into a single cluster. It is simply an outlier if no cluster could be discovered." ], "metadata": { "id": "M0fPaRceqJ1a" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "S8G_LnBSYqWP", "outputId": "cdf539cc-5c4e-403b-de71-9c7888a75ae2" }, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "[('reactor', 0.004807089197183047),\n", " ('isolates', 0.004365701493881515),\n", " ('gene', 0.004315372969837364),\n", " ('milk', 0.004180708294424944),\n", " ('growth', 0.00407561161959677)]" ] }, "metadata": {}, "execution_count": 18 } ], "source": [ "top_n_words[-1][:5]" ] }, { "cell_type": "markdown", "source": [ "To view the words belonging to those topics, we can simply use the dictionary `top_n_words` to access these topics:" ], "metadata": { "id": "zK54CJ1QsE7Z" } }, { "cell_type": "code", "source": [ "top_n_words[3][:5]" ], "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "9Xtf8lMiiBHc", "outputId": "63c92060-45eb-4710-8622-4f52641d5091" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "[('chitosan', 0.034230436479573176),\n", " ('rhamnolipid', 0.031284359498597175),\n", " ('microcolonies', 0.029662156233845275),\n", " ('rhla', 0.029123315805051703),\n", " ('seeding', 0.02748565694858995)]" ] }, "metadata": {}, "execution_count": 19 } ] }, { "cell_type": "markdown", "source": [ "## Topic Reduction" ], "metadata": { "id": "OJMXzE5JtYxE" } }, { "cell_type": "markdown", "source": [ "There's a chance that, depending on the dataset, we'll end up with hundreds of new to[ics. We can use HDBSCAN's `min_cluster_size` parameter to reduce the amount of topics we get, but it does not allow us to define the exact number of clusters.\n", "Top2Vec used a clever approach to minimize the number of subjects by merging the topic vectors that were the most similar to one another.\n", "We can use a similar strategy to update the representation of our topics by comparing the c-TF-IDF vectors among topics, merging the most similar ones, and then recalculating the c-TF-IDF vectors:" ], "metadata": { "id": "Qk1eJ3dQqjt_" } }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/", "height": 920 }, "id": "xrZrHoobag-a", "outputId": "930da810-8f64-48fb-f810-733ae109d6fb" }, "outputs": [ { "output_type": "stream", "name": "stderr", "text": [ "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n", "/usr/local/lib/python3.7/dist-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function get_feature_names is deprecated; get_feature_names is deprecated in 1.0 and will be removed in 1.2. Please use get_feature_names_out instead.\n", " warnings.warn(msg, category=FutureWarning)\n" ] }, { "output_type": "execute_result", "data": { "text/plain": [ " Topic Size\n", "0 -1 254\n", "24 23 25\n", "72 71 21\n", "67 66 19\n", "23 22 19" ], "text/html": [ "\n", " \n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " Topic\n", " Size\n", " \n", " \n", " \n", " \n", " 0\n", " -1\n", " 254\n", " \n", " \n", " 24\n", " 23\n", " 25\n", " \n", " \n", " 72\n", " 71\n", " 21\n", " \n", " \n", " 67\n", " 66\n", " 19\n", " \n", " \n", " 23\n", " 22\n", " 19\n", " \n", " \n", "\n", "\n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", " \n", "\n", " \n", " \n", " \n", " " ] }, "metadata": {}, "execution_count": 20 } ], "source": [ "#collapse-output\n", "from sklearn.metrics.pairwise import cosine_similarity\n", "\n", "for i in range(20):\n", " # Calculate cosine similarity\n", " similarities = cosine_similarity(tf_idf.T)\n", " np.fill_diagonal(similarities, 0)\n", "\n", " # Extract label to merge into and from where\n", " topic_sizes = docs_df.groupby(['Topic']).count().sort_values(\"stop_words\", ascending=False).reset_index()\n", " topic_to_merge = topic_sizes.iloc[-1].Topic\n", " topic_to_merge_into = np.argmax(similarities[topic_to_merge + 1]) - 1\n", "\n", " # Adjust topics\n", " docs_df.loc[docs_df.Topic == topic_to_merge, \"Topic\"] = topic_to_merge_into\n", " old_topics = docs_df.sort_values(\"Topic\").Topic.unique()\n", " map_topics = {old_topic: index - 1 for index, old_topic in enumerate(old_topics)}\n", " docs_df.Topic = docs_df.Topic.map(map_topics)\n", " docs_per_topic = docs_df.groupby(['Topic'], as_index = False).agg({'stop_words': ' '.join})\n", "\n", " # Calculate new topic words\n", " m = len(desc)\n", " tf_idf, count = c_tf_idf(docs_per_topic.stop_words.values, m)\n", " top_n_words = extract_top_n_words_per_topic(tf_idf, count, docs_per_topic, n=10)\n", "\n", "topic_sizes = extract_topic_sizes(docs_df); topic_sizes.head(5)" ] }, { "cell_type": "code", "source": [ "top_n_words[-1][:5]" ], "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "hsTdPwKDIDkl", "outputId": "45ce8eb8-3416-4e14-8446-868a9681917d" }, "execution_count": null, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "[('reactor', 0.004308422316201523),\n", " ('gene', 0.004166583485603502),\n", " ('growth', 0.0041528031980485255),\n", " ('response', 0.004128494039649857),\n", " ('isolates', 0.004051489331700905)]" ] }, "metadata": {}, "execution_count": 21 } ] }, { "cell_type": "code", "execution_count": null, "metadata": { "colab": { "base_uri": "https://localhost:8080/" }, "id": "YMpmJ1o-01eK", "outputId": "de5bd0da-49bc-41b8-8c4b-d09546c2843e" }, "outputs": [ { "output_type": "execute_result", "data": { "text/plain": [ "[('oral', 0.07577788028092265),\n", " ('pellicle', 0.06690219733734386),\n", " ('alloy', 0.05625604997318628),\n", " ('enzyme', 0.04885593954977157),\n", " ('corrosion', 0.04705523155575453)]" ] }, "metadata": {}, "execution_count": 22 } ], "source": [ "top_n_words[3][:5]" ] }, { "cell_type": "markdown", "source": [ "After this, we took the least common topic and merged it with the most similar topic. By repeating this, we can reduce the number of topics." ], "metadata": { "id": "6Aq9jOGr4D6r" } }, { "cell_type": "code", "source": [ "" ], "metadata": { "id": "LOxz5Hhu4K_s" }, "execution_count": null, "outputs": [] } ], "metadata": { "accelerator": "GPU", "colab": { "collapsed_sections": [], "name": "blog_umap_topic_modeling_lemmatize_stop_words.ipynb", "provenance": [] }, "kernelspec": { "display_name": "Python 3", "name": "python3" }, "language_info": { "name": "python" }, "widgets": { "application/vnd.jupyter.widget-state+json": { "4e9b41ee20d54d28b23bc6b0898655be": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_0571ba51836e4442a395d31a42391f3b", "IPY_MODEL_5a28647c8a924bb58d4528a1ad43c055", "IPY_MODEL_e6241b011c184994929642e3ffea8b3c" ], "layout": "IPY_MODEL_fc13af9c48124cdb81ccb331ea667e4f" } }, "0571ba51836e4442a395d31a42391f3b": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_1bef75a77d084b339d835b4a135f267d", "placeholder": "​", "style": "IPY_MODEL_8d9dba879761425a9bc705cccb9751fa", "value": "Downloading: 100%" } }, "5a28647c8a924bb58d4528a1ad43c055": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_b12cdb68782340a1abdd971f083b00d7", "max": 690, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_f0a8d9b85f89482583cacfc18fcedc44", "value": 690 } }, "e6241b011c184994929642e3ffea8b3c": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_07a6a9ddc9044682b9c5998bd87477dd", "placeholder": "​", "style": "IPY_MODEL_5726a39089844b318f6970a010a5a537", "value": " 690/690 [00:00&lt;00:00, 6.56kB/s]" } }, "fc13af9c48124cdb81ccb331ea667e4f": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "1bef75a77d084b339d835b4a135f267d": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "8d9dba879761425a9bc705cccb9751fa": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "b12cdb68782340a1abdd971f083b00d7": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "f0a8d9b85f89482583cacfc18fcedc44": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "07a6a9ddc9044682b9c5998bd87477dd": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "5726a39089844b318f6970a010a5a537": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "99a157f485a645aba1a02d3b50dc38e4": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_c8d22dd4e65741aeb0feec9222ebf1cb", "IPY_MODEL_4861de8af5a14e91b72412796139ef99", "IPY_MODEL_d5d6796044454f9b84a29365dfab6774" ], "layout": "IPY_MODEL_2312c586ea2f4543a113ee3ca438fb13" } }, "c8d22dd4e65741aeb0feec9222ebf1cb": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0634b09326634dea8c474fc07187e8a9", "placeholder": "​", "style": "IPY_MODEL_9f5d5355645a4e1a9ebe01f99e9f9f0e", "value": "Downloading: 100%" } }, "4861de8af5a14e91b72412796139ef99": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_eac376a2d8e3487f87537118dbf57726", "max": 190, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_7c0d714608fe479b800d1e46870af123", "value": 190 } }, "d5d6796044454f9b84a29365dfab6774": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_a99ad2da42f34e058befdb353582ac94", "placeholder": "​", "style": "IPY_MODEL_c1a51141fac54963ab8f3e482d349cfc", "value": " 190/190 [00:00&lt;00:00, 888B/s]" } }, "2312c586ea2f4543a113ee3ca438fb13": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "0634b09326634dea8c474fc07187e8a9": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "9f5d5355645a4e1a9ebe01f99e9f9f0e": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "eac376a2d8e3487f87537118dbf57726": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "7c0d714608fe479b800d1e46870af123": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "a99ad2da42f34e058befdb353582ac94": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "c1a51141fac54963ab8f3e482d349cfc": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "9f13688e9a2b43fca31a05afd1930499": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_dd5309c0140745aeb9c682662af2d355", "IPY_MODEL_69324b5bebc749ff84dd905b95ec261d", "IPY_MODEL_80a23109d92245739b54c9534d9f302c" ], "layout": "IPY_MODEL_1a597653adea43a6990fed6309d49e2e" } }, "dd5309c0140745aeb9c682662af2d355": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_2242e51d7f5c470eb19c98a707dac681", "placeholder": "​", "style": "IPY_MODEL_20de34b2745a4ff0939412bc59fe8c3a", "value": "Downloading: 100%" } }, "69324b5bebc749ff84dd905b95ec261d": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_b09dcc8c627447b1b125d61afa11ad95", "max": 3988, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_36b89e02877e4332a25e05da132c12b4", "value": 3988 } }, "80a23109d92245739b54c9534d9f302c": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_be5d06c0446042d5879c2a891c183f01", "placeholder": "​", "style": "IPY_MODEL_7a3b66f2130c43ebb5b7c12667300327", "value": " 3.99k/3.99k [00:00&lt;00:00, 44.8kB/s]" } }, "1a597653adea43a6990fed6309d49e2e": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "2242e51d7f5c470eb19c98a707dac681": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "20de34b2745a4ff0939412bc59fe8c3a": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "b09dcc8c627447b1b125d61afa11ad95": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "36b89e02877e4332a25e05da132c12b4": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "be5d06c0446042d5879c2a891c183f01": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "7a3b66f2130c43ebb5b7c12667300327": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "a239d56ee3ac4d1593a063329350a1a2": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_d11bce41480746c8b071baad09c0506e", "IPY_MODEL_252a4237a63740dba9b1b08db9210007", "IPY_MODEL_644e0163ad054fb5ac03654d8a2059df" ], "layout": "IPY_MODEL_d5d5625562b048cf982581297001a14c" } }, "d11bce41480746c8b071baad09c0506e": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_ea640860383a45dc98c59076bc2d9452", "placeholder": "​", "style": "IPY_MODEL_e09ed8b749844f0f96f745380e8c91f4", "value": "Downloading: 100%" } }, "252a4237a63740dba9b1b08db9210007": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_a6fcbd0cf7d444d4ae090890770f70cf", "max": 550, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_6ea25a30a1084200b746c6fe82d275e4", "value": 550 } }, "644e0163ad054fb5ac03654d8a2059df": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_23908ca6d9f44af0a834cf6a66105444", "placeholder": "​", "style": "IPY_MODEL_f0a47a3349534df093bc7cae8ce3d1ca", "value": " 550/550 [00:00&lt;00:00, 5.53kB/s]" } }, "d5d5625562b048cf982581297001a14c": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "ea640860383a45dc98c59076bc2d9452": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "e09ed8b749844f0f96f745380e8c91f4": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "a6fcbd0cf7d444d4ae090890770f70cf": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "6ea25a30a1084200b746c6fe82d275e4": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "23908ca6d9f44af0a834cf6a66105444": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "f0a47a3349534df093bc7cae8ce3d1ca": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "eb29d9d4862d42cda0126ce2e2ee1489": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_261ad465189f4f489a99b9243623007f", "IPY_MODEL_d87f15b51d724339a688ab353afda8d8", "IPY_MODEL_30802e5be6854065a4add613b65c0f32" ], "layout": "IPY_MODEL_477709a9eaa8403684a3c19caac7843c" } }, "261ad465189f4f489a99b9243623007f": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0dc97d5a597641149fb314ff55553a78", "placeholder": "​", "style": "IPY_MODEL_1a320253bcd04789bd8b9cb410bb0524", "value": "Downloading: 100%" } }, "d87f15b51d724339a688ab353afda8d8": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_bef0cc76caac48c2a3d265864d5c46c6", "max": 122, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_1b4eb842b5584aaeafb40a28def2d921", "value": 122 } }, "30802e5be6854065a4add613b65c0f32": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0c94b1e9cda34410a81f523d63c91637", "placeholder": "​", "style": "IPY_MODEL_cae50e598c8c40d38b09f9fbe8dddab3", "value": " 122/122 [00:00&lt;00:00, 1.37kB/s]" } }, "477709a9eaa8403684a3c19caac7843c": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "0dc97d5a597641149fb314ff55553a78": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "1a320253bcd04789bd8b9cb410bb0524": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "bef0cc76caac48c2a3d265864d5c46c6": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "1b4eb842b5584aaeafb40a28def2d921": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "0c94b1e9cda34410a81f523d63c91637": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "cae50e598c8c40d38b09f9fbe8dddab3": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "c4335ff76c4a47cfaa6a9700e4961c14": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_0fa46978593e479994c75489544596cc", "IPY_MODEL_edfab9679d3e44609549a277323e7dd4", "IPY_MODEL_79573a90e2ec41f2aeed299cb521d223" ], "layout": "IPY_MODEL_5d4ad283d5904b60a7cc82416397da14" } }, "0fa46978593e479994c75489544596cc": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_c775716acb4c4844a20cbf4fcdb89e0d", "placeholder": "​", "style": "IPY_MODEL_b0ec4fa70fea430a84abd27dae8238a8", "value": "Downloading: 100%" } }, "edfab9679d3e44609549a277323e7dd4": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_2194bbd052464e4c9c7c1bce877273ea", "max": 229, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_26e8f96a3bb2443688e34b674d52f489", "value": 229 } }, "79573a90e2ec41f2aeed299cb521d223": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_e3238a7cbc5346bd874e7e7608cd3775", "placeholder": "​", "style": "IPY_MODEL_62879470484b465f87d0566e9e42ef6f", "value": " 229/229 [00:00&lt;00:00, 1.63kB/s]" } }, "5d4ad283d5904b60a7cc82416397da14": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "c775716acb4c4844a20cbf4fcdb89e0d": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "b0ec4fa70fea430a84abd27dae8238a8": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "2194bbd052464e4c9c7c1bce877273ea": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "26e8f96a3bb2443688e34b674d52f489": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "e3238a7cbc5346bd874e7e7608cd3775": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "62879470484b465f87d0566e9e42ef6f": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "8a0773f520cd41239ecf67ef29ab9b1b": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_f1422789f90f49108d2cbfc2f61b8404", "IPY_MODEL_07a7630ff2c547a1a921ec15b068baa9", "IPY_MODEL_593759e42b1c4d48aeac440420074c56" ], "layout": "IPY_MODEL_f3aae5300ed547b1808fe8d8fd579a80" } }, "f1422789f90f49108d2cbfc2f61b8404": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0d67c26cedea48b7a6371e8864dc6cff", "placeholder": "​", "style": "IPY_MODEL_d91400902ef04ceb94844d7b9a262b9b", "value": "Downloading: 100%" } }, "07a7630ff2c547a1a921ec15b068baa9": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_554586e62ca34cf2bf1ac7ceaada9759", "max": 265486777, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_b6fe7d06d7ec4aaf9fa04255ca00bf0f", "value": 265486777 } }, "593759e42b1c4d48aeac440420074c56": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_8bf82755d1f14a46b0f4a353c0e02fc3", "placeholder": "​", "style": "IPY_MODEL_3916af2669634fa596ab260bfa1dc3ee", "value": " 265M/265M [00:10&lt;00:00, 35.8MB/s]" } }, "f3aae5300ed547b1808fe8d8fd579a80": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "0d67c26cedea48b7a6371e8864dc6cff": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "d91400902ef04ceb94844d7b9a262b9b": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "554586e62ca34cf2bf1ac7ceaada9759": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "b6fe7d06d7ec4aaf9fa04255ca00bf0f": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "8bf82755d1f14a46b0f4a353c0e02fc3": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "3916af2669634fa596ab260bfa1dc3ee": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "9dc64ee499ef44ddb58dfef8eebb5b79": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_c1a5c121ec484b8caab27486cdb0d3e6", "IPY_MODEL_05ec10fb71be492b80295bdee7d47831", "IPY_MODEL_4562ac11827e4e0ca2dab56b953d22de" ], "layout": "IPY_MODEL_6b2235cf3f964d4399f0079587930061" } }, "c1a5c121ec484b8caab27486cdb0d3e6": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_b5e2e95b3e5c4a039e04f6b4be258a82", "placeholder": "​", "style": "IPY_MODEL_90afa46f3a594dafa4753fa3f0de32c2", "value": "Downloading: 100%" } }, "05ec10fb71be492b80295bdee7d47831": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_ac72a0f833444531afd8f61d15938f38", "max": 53, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_85036764c5e644f8bc5d6486cf3de865", "value": 53 } }, "4562ac11827e4e0ca2dab56b953d22de": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_66a17ea68ac84e32a5b031defee58629", "placeholder": "​", "style": "IPY_MODEL_cdfac733d3cd40e992d40ae35efe83f7", "value": " 53.0/53.0 [00:00&lt;00:00, 1.43kB/s]" } }, "6b2235cf3f964d4399f0079587930061": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "b5e2e95b3e5c4a039e04f6b4be258a82": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "90afa46f3a594dafa4753fa3f0de32c2": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "ac72a0f833444531afd8f61d15938f38": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "85036764c5e644f8bc5d6486cf3de865": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "66a17ea68ac84e32a5b031defee58629": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "cdfac733d3cd40e992d40ae35efe83f7": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "3c7df8dc40464c6f92008b15935f428e": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_221d008c325647bdbf67f6616314b52f", "IPY_MODEL_48906177283f43c09f2808f14d490285", "IPY_MODEL_2182d42a0e3d45c3b12f3c528c922f4c" ], "layout": "IPY_MODEL_df3480fd2a0642cb8193c18b2181df8b" } }, "221d008c325647bdbf67f6616314b52f": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_deaded7e5020481c99adcb0bdaa22dc5", "placeholder": "​", "style": "IPY_MODEL_37694f7bb6f34008bdd52ce12cc3dcb1", "value": "Downloading: 100%" } }, "48906177283f43c09f2808f14d490285": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_63e16379366f4e1195128c46303aa72e", "max": 112, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_eb67b9adab63421f92eb4ce5d6c58bd9", "value": 112 } }, "2182d42a0e3d45c3b12f3c528c922f4c": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_81514c67c46d44799226f51a217434dd", "placeholder": "​", "style": "IPY_MODEL_dddc05e60cd34fc99f117c90ae8ac829", "value": " 112/112 [00:00&lt;00:00, 2.59kB/s]" } }, "df3480fd2a0642cb8193c18b2181df8b": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "deaded7e5020481c99adcb0bdaa22dc5": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "37694f7bb6f34008bdd52ce12cc3dcb1": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "63e16379366f4e1195128c46303aa72e": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "eb67b9adab63421f92eb4ce5d6c58bd9": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "81514c67c46d44799226f51a217434dd": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "dddc05e60cd34fc99f117c90ae8ac829": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "75e010c9d6fc4c62aa7d12d007ed0a73": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_a82b4febc5ec4a298123955d20e0d96e", "IPY_MODEL_c755e11c699c4f5694b266d5aa6d387c", "IPY_MODEL_c7e147d6921d45f8b552e735823ea394" ], "layout": "IPY_MODEL_570b0e409c82453da6bdf4404bd2cbbd" } }, "a82b4febc5ec4a298123955d20e0d96e": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_4577e4e42d0143eba641b99b3989ecff", "placeholder": "​", "style": "IPY_MODEL_216d2736dad347709134507020628728", "value": "Downloading: 100%" } }, "c755e11c699c4f5694b266d5aa6d387c": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_1a77fe6ed3de47c8a16540b57416ffca", "max": 466081, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_bbd01a44548b454c8ac22fa29f5762c5", "value": 466081 } }, "c7e147d6921d45f8b552e735823ea394": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_18833456d00d42fdbeb21d0d4a7df089", "placeholder": "​", "style": "IPY_MODEL_38ba306a162b4207bd2ffa341971cc4a", "value": " 466k/466k [00:00&lt;00:00, 1.59MB/s]" } }, "570b0e409c82453da6bdf4404bd2cbbd": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "4577e4e42d0143eba641b99b3989ecff": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "216d2736dad347709134507020628728": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "1a77fe6ed3de47c8a16540b57416ffca": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "bbd01a44548b454c8ac22fa29f5762c5": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "18833456d00d42fdbeb21d0d4a7df089": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "38ba306a162b4207bd2ffa341971cc4a": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "08ed88e630294c3496fc7ef019b01b63": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_f6f99f59ce044c16ad528e35b319de59", "IPY_MODEL_6318e530c67f4a71913cfeb1608495ec", "IPY_MODEL_3ed7848624304f0b92050afe49fa8975" ], "layout": "IPY_MODEL_14c042ab615747cd870152c8e48ab484" } }, "f6f99f59ce044c16ad528e35b319de59": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_9c696a3adafb43399c213c89af17bfa7", "placeholder": "​", "style": "IPY_MODEL_7464572611d741a4bc29e4169aaa76e9", "value": "Downloading: 100%" } }, "6318e530c67f4a71913cfeb1608495ec": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_a0d867f19c964f1d87d09e60fefa28c9", "max": 450, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_728da3df7af1495b8ac1e1a048fda156", "value": 450 } }, "3ed7848624304f0b92050afe49fa8975": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_0a0cf24ff7544c59af69fba34ea741f5", "placeholder": "​", "style": "IPY_MODEL_a9c3b54eeb744e20ae0062a1088d90a6", "value": " 450/450 [00:00&lt;00:00, 9.51kB/s]" } }, "14c042ab615747cd870152c8e48ab484": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "9c696a3adafb43399c213c89af17bfa7": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "7464572611d741a4bc29e4169aaa76e9": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "a0d867f19c964f1d87d09e60fefa28c9": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "728da3df7af1495b8ac1e1a048fda156": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "0a0cf24ff7544c59af69fba34ea741f5": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "a9c3b54eeb744e20ae0062a1088d90a6": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "a9068299daa5493580588a08b5170563": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_0a1a4aec7ae44426b66f4d8046248b26", "IPY_MODEL_0031e036be5d40ff8114aa6d5d09d864", "IPY_MODEL_b604222e2c414251b660b266c2e1fd62" ], "layout": "IPY_MODEL_56a8fbaee60143afa02459855ce6e1c5" } }, "0a1a4aec7ae44426b66f4d8046248b26": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_51b328c446b94cc692173d5135a68779", "placeholder": "​", "style": "IPY_MODEL_3239090a906043b68c6df6c2a59f97bf", "value": "Downloading: 100%" } }, "0031e036be5d40ff8114aa6d5d09d864": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_acb6313b2fa1450ab2aefdc8208d2577", "max": 231508, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_c8a80c42256c4d559b865b47cdceb579", "value": 231508 } }, "b604222e2c414251b660b266c2e1fd62": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_6c65dd6999e44509bbd110bb65fa7cb1", "placeholder": "​", "style": "IPY_MODEL_22d49365f814435088e6820c2297378a", "value": " 232k/232k [00:00&lt;00:00, 1.24MB/s]" } }, "56a8fbaee60143afa02459855ce6e1c5": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "51b328c446b94cc692173d5135a68779": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "3239090a906043b68c6df6c2a59f97bf": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "acb6313b2fa1450ab2aefdc8208d2577": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "c8a80c42256c4d559b865b47cdceb579": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "6c65dd6999e44509bbd110bb65fa7cb1": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "22d49365f814435088e6820c2297378a": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "bfc0071cfca34669884aabf19a2e9361": { "model_module": "@jupyter-widgets/controls", "model_name": "HBoxModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HBoxModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HBoxView", "box_style": "", "children": [ "IPY_MODEL_c200aeca87154cfeaac4861be6cdcf44", "IPY_MODEL_fa7f471b64aa4d269fd2659eab802cb8", "IPY_MODEL_343547d4d4304c2a9c8ccf78c91bbf14" ], "layout": "IPY_MODEL_4395e222a703448b835601c72aa2c699" } }, "c200aeca87154cfeaac4861be6cdcf44": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_642a255c02e84da1af51b86e40b16459", "placeholder": "​", "style": "IPY_MODEL_7cf0883b7df740ebbcf83e0af773d5f6", "value": "Batches: 100%" } }, "fa7f471b64aa4d269fd2659eab802cb8": { "model_module": "@jupyter-widgets/controls", "model_name": "FloatProgressModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "FloatProgressModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "ProgressView", "bar_style": "success", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_ecb267452dce406f80d15572cae36ab0", "max": 32, "min": 0, "orientation": "horizontal", "style": "IPY_MODEL_2361ae2347dd432d98c91e57c03c20bf", "value": 32 } }, "343547d4d4304c2a9c8ccf78c91bbf14": { "model_module": "@jupyter-widgets/controls", "model_name": "HTMLModel", "model_module_version": "1.5.0", "state": { "_dom_classes": [], "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "HTMLModel", "_view_count": null, "_view_module": "@jupyter-widgets/controls", "_view_module_version": "1.5.0", "_view_name": "HTMLView", "description": "", "description_tooltip": null, "layout": "IPY_MODEL_dfd3b927e6ee48f89f101de464d6fa2b", "placeholder": "​", "style": "IPY_MODEL_33e7d532927248fb847247d53056b5f7", "value": " 32/32 [00:07&lt;00:00, 5.76it/s]" } }, "4395e222a703448b835601c72aa2c699": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "642a255c02e84da1af51b86e40b16459": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "7cf0883b7df740ebbcf83e0af773d5f6": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } }, "ecb267452dce406f80d15572cae36ab0": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "2361ae2347dd432d98c91e57c03c20bf": { "model_module": "@jupyter-widgets/controls", "model_name": "ProgressStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "ProgressStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "bar_color": null, "description_width": "" } }, "dfd3b927e6ee48f89f101de464d6fa2b": { "model_module": "@jupyter-widgets/base", "model_name": "LayoutModel", "model_module_version": "1.2.0", "state": { "_model_module": "@jupyter-widgets/base", "_model_module_version": "1.2.0", "_model_name": "LayoutModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "LayoutView", "align_content": null, "align_items": null, "align_self": null, "border": null, "bottom": null, "display": null, "flex": null, "flex_flow": null, "grid_area": null, "grid_auto_columns": null, "grid_auto_flow": null, "grid_auto_rows": null, "grid_column": null, "grid_gap": null, "grid_row": null, "grid_template_areas": null, "grid_template_columns": null, "grid_template_rows": null, "height": null, "justify_content": null, "justify_items": null, "left": null, "margin": null, "max_height": null, "max_width": null, "min_height": null, "min_width": null, "object_fit": null, "object_position": null, "order": null, "overflow": null, "overflow_x": null, "overflow_y": null, "padding": null, "right": null, "top": null, "visibility": null, "width": null } }, "33e7d532927248fb847247d53056b5f7": { "model_module": "@jupyter-widgets/controls", "model_name": "DescriptionStyleModel", "model_module_version": "1.5.0", "state": { "_model_module": "@jupyter-widgets/controls", "_model_module_version": "1.5.0", "_model_name": "DescriptionStyleModel", "_view_count": null, "_view_module": "@jupyter-widgets/base", "_view_module_version": "1.2.0", "_view_name": "StyleView", "description_width": "" } } } } }, "nbformat": 4, "nbformat_minor": 0 }]]></summary></entry><entry><title type="html">Fastpages Notebook Blog Post</title><link href="https://readstech.github.io/bicbioeng-lab-blog/jupyter/2020/02/20/test.html" rel="alternate" type="text/html" title="Fastpages Notebook Blog Post" /><published>2020-02-20T00:00:00-06:00</published><updated>2020-02-20T00:00:00-06:00</updated><id>https://readstech.github.io/bicbioeng-lab-blog/jupyter/2020/02/20/test</id><author><name></name></author><category term="jupyter" /><summary type="html"><![CDATA[A tutorial of fastpages for Jupyter notebooks.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://readstech.github.io/bicbioeng-lab-blog/images/chart-preview.png" /><media:content medium="image" url="https://readstech.github.io/bicbioeng-lab-blog/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">An Example Markdown Post</title><link href="https://readstech.github.io/bicbioeng-lab-blog/markdown/2020/01/14/test-markdown-post.html" rel="alternate" type="text/html" title="An Example Markdown Post" /><published>2020-01-14T00:00:00-06:00</published><updated>2020-01-14T00:00:00-06:00</updated><id>https://readstech.github.io/bicbioeng-lab-blog/markdown/2020/01/14/test-markdown-post</id><author><name></name></author><category term="markdown" /><summary type="html"><![CDATA[A minimal example of using markdown with fastpages.]]></summary></entry></feed>